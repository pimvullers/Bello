<?xml version="1.0" encoding="UTF-8"?>
<window  id="2600">
	<defaultcontrol always="true">50</defaultcontrol>
  <allowoverlay>no</allowoverlay>
  <backgroundcolor>0</backgroundcolor>
	<onload condition="SubString(Window(Weather).Property(Current.ConditionIcon),na) | [IsEmpty(Window(Weather).Property(Current.Condition)) | IsEmpty(Window(Weather).Property(Location))] + IsEmpty(Control.GetLabel(3))">ActivateWindow(1110)</onload>
	<onload condition="IsEmpty(Skin.String(WeatherUnderground))">Skin.SetString(WeatherUnderground,1)</onload>
	<controls>
		<include>BackgroundContent</include>
		<include>HomeCategoriesFanart</include>
		<include>BackgroundVignette</include>
	  <include>CommonNowPlaying</include>
    <include condition="Skin.HasSetting(EnableWeatherAlertsNotifications)">WeatherAlertsNotifications</include>

		<control type="group">
		 <include>WeatherTopInfo</include>
		 <include condition="!StringCompare(Weather.Plugin,weather.wunderground)">WeatherDefault</include>
		 <include condition="StringCompare(Weather.Plugin,weather.wunderground)">WeatherUnderground</include>
		</control>

		<include>CommonDialogsFadeOutBG</include>

    <!-- ================= -->
    <!-- Top Options Menus -->
    <!-- ================= -->
	  <control type="group"  id="9000">
			<left>45</left>
			<top>25</top>
      <include>TopOptionsSlideAnimations</include>
		  <visible>!Skin.HasSetting(EnableKioskMode)</visible>
      <!-- Main Options -->
			<control type="grouplist" id="9111">
				<left>0</left>
				<top>0</top>
				<width>0</width>
				<height>0</height>
				<itemgap>0</itemgap>
				<align>left</align>
				<orientation>horizontal</orientation>
				<onleft>9111</onleft>
				<onright>9111</onright>
				<onup>noop</onup>
				<ondown>50</ondown>
				<onback>50</onback>
				<control type="button" id="3">
					<description>Select Location</description>
				  <include>TopButton</include>
			    <onclick>Weather.LocationNext</onclick>
					<onclick>SetFocus(50)</onclick>
				  <label>-</label>
				</control>
				<control type="button" id="250">
					<description>Change View</description>
				  <include>TopButton</include>
			    <onclick condition="stringcompare(Skin.String(WeatherUnderground),4)">Skin.SetString(WeatherUnderground,1)</onclick>
			    <onclick condition="stringcompare(Skin.String(WeatherUnderground),3)">Skin.SetString(WeatherUnderground,4)</onclick>
			    <onclick condition="stringcompare(Skin.String(WeatherUnderground),2)">Skin.SetString(WeatherUnderground,3)</onclick>
			    <onclick condition="stringcompare(Skin.String(WeatherUnderground),1)">Skin.SetString(WeatherUnderground,2)</onclick>
			    <onclick condition="stringcompare(Skin.String(WeatherUnderground),4)">Skin.SetString(WeatherUnderground,1)</onclick>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="radiobutton" id="251">
					<description>Fanart Toggle</description>
				  <include>TopButton</include>
					<label>-</label>
					<onclick>Skin.ToggleSetting(ShowWeatherFanart)</onclick>
					<onclick condition="!Skin.HasSetting(ShowWeatherFanart)">Skin.SetPath(WeatherFanartDir)</onclick>
					<onclick condition="!IsEmpty(Skin.String(WeatherFanartDir)) + !Skin.HasSetting(ShowWeatherFanart)">ReplaceWindow(Weather)</onclick>
					<selected>!IsEmpty(Skin.String(WeatherFanartDir)) + Skin.HasSetting(ShowWeatherFanart)</selected>
				</control>
				<control type="radiobutton" id="252">
					<description>Alerts Toggle</description>
				  <include>TopButton</include>
					<label>-</label>
					<onclick>Skin.ToggleSetting(EnableWeatherAlertsNotifications)</onclick>
			    <onclick condition="Skin.HasSetting(EnableWeatherAlertsNotifications)">ReplaceWindow(Weather)</onclick>
					<selected>Skin.HasSetting(EnableWeatherAlertsNotifications)</selected>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="button" id="2">
					<description>Refresh</description>
				  <include>TopButton</include>
		      <label>103</label>
				</control>
				<control type="button" id="4">
					<description>Settings</description>
				  <include>TopButton</include>
					<label>5</label>
			    <onclick>ActivateWindow(MyWeatherSettings)</onclick>
				</control>
			</control>
      <!-- Main Options Labels -->
			<control type="grouplist">
		  <visible>!IsEmpty(Window.Property(Current.Condition))</visible>
		    <visible allowhiddenfocus="true">ControlGroup(9111).HasFocus + !Window.IsActive(ShutdownMenu) + !Window.IsActive(favourites)</visible>
	      <animation type="Visible"  reversible="false">
	          <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"  />
	          <effect type="slide" start="0,-35" end="0,0" time="350" tween="cubic" easing="out" />
	      </animation>
	      <animation type="Hidden" reversible="false">
	          <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
	          <effect type="slide" start="0,0" end="0,-35" time="350" tween="sine" easing="out" />
	      </animation>
				<left>0</left>
				<top>0</top>
				<height>70</height>
				<width>1280</width>
				<itemgap>10</itemgap>
				<align>left</align>
				<orientation>horizontal</orientation>
				<control type="label">
				  <include>TopBigLabel</include>
				  <label>$LOCALIZE[33063]:</label>
				</control>
				<control type="label">
					<description>Select Location</description>
				  <include>TopSmallLabel</include>
          <label>$LOCALIZE[396]: $INFO[Control.GetLabel(3)]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(3)" reversible="true">Conditional</animation>
          <animation effect="zoom" start="100" end="95" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(3)" reversible="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Current weather conditions</description>
				  <include>TopSmallLabel</include>
          <label>$LOCALIZE[31237]: $LOCALIZE[31235]</label>
					<visible>stringcompare(Skin.String(WeatherUnderground),1)</visible>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="95" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="label">
					<description>36 hours forcast button</description>
				  <include>TopSmallLabel</include>
          <label>$LOCALIZE[31237]: $LOCALIZE[31223]</label>
					<visible>stringcompare(Skin.String(WeatherUnderground),2)</visible>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="95" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="label">
					<description>Hourly forcast button</description>
				  <include>TopSmallLabel</include>
          <label>$LOCALIZE[31237]: $LOCALIZE[31224]</label>
					<visible>stringcompare(Skin.String(WeatherUnderground),3)</visible>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="95" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="label">
					<description>10 days forcast button</description>
				  <include>TopSmallLabel</include>
          <label>$LOCALIZE[31237]: $LOCALIZE[31226]</label>
					<visible>stringcompare(Skin.String(WeatherUnderground),4)</visible>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="95" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(250)" reversible="true">Conditional</animation>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="label">
					<description>Fanart Toggle</description>
				  <include>TopSmallLabel</include>
					<label>$LOCALIZE[20445]: $LOCALIZE[31011]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(251)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(251)" reversible="true">Conditional</animation>
			    <visible>SubString(Control.GetLabel(251),*)</visible>
				</control>
				<control type="label">
					<description>Fanart Toggle</description>
				  <include>TopSmallLabel</include>
					<label>$LOCALIZE[20445]: $LOCALIZE[31012]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(251)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(251)" reversible="true">Conditional</animation>
			    <visible>!SubString(Control.GetLabel(251),*)</visible>
				</control>
				<control type="label">
					<description>Alerts Toggle</description>
				  <include>TopSmallLabel</include>
					<label>$LOCALIZE[33050]: $LOCALIZE[31011]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(252)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(252)" reversible="true">Conditional</animation>
			    <visible>SubString(Control.GetLabel(252),*)</visible>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>
				<control type="label">
					<description>Alerts Toggle</description>
				  <include>TopSmallLabel</include>
					<label>$LOCALIZE[33050]: $LOCALIZE[31012]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(252)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(252)" reversible="true">Conditional</animation>
			    <visible>!SubString(Control.GetLabel(252),*)</visible>
					<visible>StringCompare(Weather.Plugin,weather.wunderground)</visible>
				</control>					
				<control type="label">
					<description>Refresh</description>
				  <include>TopSmallLabel</include>
          <label>$INFO[Control.GetLabel(2)]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(2)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(2)" reversible="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Settings</description>
				  <include>TopSmallLabel</include>
          <label>$INFO[Control.GetLabel(4)]</label>
					<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9111).HasFocus(4)" reversible="true">Conditional</animation>
          <animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9111).HasFocus(4)" reversible="true">Conditional</animation>
				</control>
			</control>
	  </control>


		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
			<fadetime>300</fadetime>
      <colordiffuse>ddFFFFFF</colordiffuse>
	    <visible>[IsEmpty(Window(Weather).Property(Current.Condition)) | IsEmpty(Window(Weather).Property(Location))] + !IsEmpty(Control.GetLabel(3)) + !SubString(Window(Weather).Property(Current.ConditionIcon),na)</visible>
	  </control>
	  <include>CommonWeatherAndClock</include>

    <!-- ================ -->
    <!-- Top Content Info -->
    <!-- ================ -->
	  <control type="group">
			<left>45</left>
			<top>25</top>
		  <include>CommonSlideAnimations</include>
			<include>ShutdownMenuAnimation</include>
		  <visible>!ControlGroup(9000).HasFocus</visible>
			<control type="grouplist">
				<left>0</left>
				<top>0</top>
				<height>70</height>
				<width>1000</width>
				<align>left</align>
				<itemgap>20</itemgap>
				<orientation>horizontal</orientation>
	      <include>CommonSlideAnimations</include>
			  <visible>![IsEmpty(Window(Weather).Property(Current.Condition)) | IsEmpty(Window(Weather).Property(Location))] + !IsEmpty(Control.GetLabel(3)) + !SubString(Window(Weather).Property(Current.ConditionIcon),na)</visible>
				<control type="label">
				  <include>TopBigLabel</include>
					<label fallback="8">$INFO[Window.Property(Location)]</label>
				</control>
				<control type="label">
				  <include>TopZoomedSmallLabel</include>
			    <label>$LOCALIZE[31235]</label>
		      <visible>![Skin.String(WeatherUnderground,2) | Skin.String(WeatherUnderground,3) | Skin.String(WeatherUnderground,4)]</visible>
				</control>
				<control type="label">
				  <include>TopZoomedSmallLabel</include>
					<label>$LOCALIZE[31223]</label>
		      <visible>Skin.String(WeatherUnderground,2)</visible>
				</control>
				<control type="label">
				  <include>TopZoomedSmallLabel</include>
					<label>$LOCALIZE[31224]</label>
		      <visible>Skin.String(WeatherUnderground,3)</visible>
				</control>
				<control type="label">
				  <include>TopZoomedSmallLabel</include>
					<label>$LOCALIZE[31226]</label>
		      <visible>Skin.String(WeatherUnderground,4)</visible>
				</control>
			</control>
			<control type="grouplist">
				<left>0</left>
				<top>0</top>
				<height>70</height>
				<width>1000</width>
				<align>left</align>
				<itemgap>20</itemgap>
				<orientation>horizontal</orientation>
	      <include>CommonSlideAnimations</include>
			  <visible>[IsEmpty(Window(Weather).Property(Current.Condition)) | IsEmpty(Window(Weather).Property(Location))] | IsEmpty(Control.GetLabel(3)) | SubString(Window(Weather).Property(Current.ConditionIcon),na)</visible>
				<control type="label">
				  <include>TopBigLabel</include>
					<label>$INFO[Control.GetLabel(3)]...</label>
					<visible>!IsEmpty(Control.GetLabel(3))</visible>
				</control>
				<control type="label">
				  <include>TopBigLabel</include>
					<label>8</label>
					<visible>IsEmpty(Control.GetLabel(3))</visible>
				</control>				
			</control>
	  </control>

		<!-- Fetching Info  -->
		<control type="label">
			<description>fetching label</description>
			<left>45</left>
			<top>235</top>
			<width>1200</width>
			<height>40</height>
			<font>FontSize_48</font>
			<textcolor>99white</textcolor>
			<shadowcolor>99000000</shadowcolor>
			<align>center</align>
			<aligny>center</aligny>
			<label>$LOCALIZE[411]</label>
	    <visible>[IsEmpty(Window(Weather).Property(Current.Condition)) | IsEmpty(Window(Weather).Property(Location))] + !IsEmpty(Control.GetLabel(3)) + !SubString(Window(Weather).Property(Current.ConditionIcon),na)</visible>
		  <include>CommonSlideAnimations</include>
	  </control>
		<control type="label">
			<description>location label</description>
			<left>30</left>
			<top>270</top>
			<width>1200</width>
			<height>120</height>
			<font>FontSize_80</font>
			<textcolor>white</textcolor>
			<shadowcolor>99000000</shadowcolor>
			<align>center</align>
			<aligny>center</aligny>
			<label>$INFO[Control.GetLabel(3)]</label>
	    <visible>[IsEmpty(Window(Weather).Property(Current.Condition)) | IsEmpty(Window(Weather).Property(Location))] + !SubString(Window(Weather).Property(Current.ConditionIcon),na)</visible>
	    <include>CommonSlideAnimations</include>
	  </control>

	</controls>
</window>

